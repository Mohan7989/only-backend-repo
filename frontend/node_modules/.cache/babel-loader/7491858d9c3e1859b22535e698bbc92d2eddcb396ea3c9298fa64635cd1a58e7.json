{"ast":null,"code":"import axios from'axios';// Base URL - change to your backend URL when ready.\nexport const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:8080/api';const axiosInstance=axios.create({baseURL:API_BASE_URL,timeout:30000});// Upload an item (multipart)\nexport async function uploadMaterial(formData){try{const res=await axiosInstance.post('/uploads',formData,{headers:{'Content-Type':'multipart/form-data'}});return res.data;}catch(err){var _err$response;throw((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err;}}// Get materials with filters\nexport async function fetchMaterials(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// filters: { semester, subject, group, year, type, page, size }\ntry{const res=await axiosInstance.get('/materials',{params:filters});return res.data;}catch(err){// fallback mock if backend not ready\nreturn{items:[],total:0};}}","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","axiosInstance","create","baseURL","timeout","uploadMaterial","formData","res","post","headers","data","err","_err$response","response","fetchMaterials","filters","arguments","length","undefined","get","params","items","total"],"sources":["D:/MRAC Students Website/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL - change to your backend URL when ready.\r\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000\r\n});\r\n\r\n// Upload an item (multipart)\r\nexport async function uploadMaterial(formData) {\r\n  try {\r\n    const res = await axiosInstance.post('/uploads', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    throw err.response?.data || err;\r\n  }\r\n}\r\n\r\n// Get materials with filters\r\nexport async function fetchMaterials(filters = {}) {\r\n  // filters: { semester, subject, group, year, type, page, size }\r\n  try {\r\n    const res = await axiosInstance.get('/materials', { params: filters });\r\n    return res.data;\r\n  } catch (err) {\r\n    // fallback mock if backend not ready\r\n    return { items: [], total: 0 };\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,MAAO,MAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,2BAA2B,CAE7F,KAAM,CAAAC,aAAa,CAAGL,KAAK,CAACM,MAAM,CAAC,CACjCC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,KACX,CAAC,CAAC,CAEF;AACA,MAAO,eAAe,CAAAC,cAAcA,CAACC,QAAQ,CAAE,CAC7C,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAN,aAAa,CAACO,IAAI,CAAC,UAAU,CAAEF,QAAQ,CAAE,CACzDG,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACF,MAAO,CAAAF,GAAG,CAACG,IAAI,CACjB,CAAE,MAAOC,GAAG,CAAE,KAAAC,aAAA,CACZ,KAAM,EAAAA,aAAA,CAAAD,GAAG,CAACE,QAAQ,UAAAD,aAAA,iBAAZA,aAAA,CAAcF,IAAI,GAAIC,GAAG,CACjC,CACF,CAEA;AACA,MAAO,eAAe,CAAAG,cAAcA,CAAA,CAAe,IAAd,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC/C;AACA,GAAI,CACF,KAAM,CAAAT,GAAG,CAAG,KAAM,CAAAN,aAAa,CAACkB,GAAG,CAAC,YAAY,CAAE,CAAEC,MAAM,CAAEL,OAAQ,CAAC,CAAC,CACtE,MAAO,CAAAR,GAAG,CAACG,IAAI,CACjB,CAAE,MAAOC,GAAG,CAAE,CACZ;AACA,MAAO,CAAEU,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,CAAE,CAAC,CAChC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}