{"ast":null,"code":"import axios from 'axios';\n\n// Base URL - change to your backend URL when ready.\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000\n});\n\n// Upload an item (multipart)\nexport async function uploadMaterial(formData) {\n  try {\n    const res = await axiosInstance.post('/uploads', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return res.data;\n  } catch (err) {\n    var _err$response;\n    throw ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err;\n  }\n}\n\n// Get materials with filters\nexport async function fetchMaterials(filters = {}) {\n  // filters: { semester, subject, group, year, type, page, size }\n  try {\n    const res = await axiosInstance.get('/materials', {\n      params: filters\n    });\n    return res.data;\n  } catch (err) {\n    // fallback mock if backend not ready\n    return {\n      items: [],\n      total: 0\n    };\n  }\n}","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","axiosInstance","create","baseURL","timeout","uploadMaterial","formData","res","post","headers","data","err","_err$response","response","fetchMaterials","filters","get","params","items","total"],"sources":["D:/MRAC Students Website/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL - change to your backend URL when ready.\r\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000\r\n});\r\n\r\n// Upload an item (multipart)\r\nexport async function uploadMaterial(formData) {\r\n  try {\r\n    const res = await axiosInstance.post('/uploads', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    throw err.response?.data || err;\r\n  }\r\n}\r\n\r\n// Get materials with filters\r\nexport async function fetchMaterials(filters = {}) {\r\n  // filters: { semester, subject, group, year, type, page, size }\r\n  try {\r\n    const res = await axiosInstance.get('/materials', { params: filters });\r\n    return res.data;\r\n  } catch (err) {\r\n    // fallback mock if backend not ready\r\n    return { items: [], total: 0 };\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;AAE7F,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EACjCC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,eAAeC,cAAcA,CAACC,QAAQ,EAAE;EAC7C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAC,UAAU,EAAEF,QAAQ,EAAE;MACzDG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;IACF,OAAOF,GAAG,CAACG,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZ,MAAM,EAAAA,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG;EACjC;AACF;;AAEA;AACA,OAAO,eAAeG,cAAcA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EACjD;EACA,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMN,aAAa,CAACe,GAAG,CAAC,YAAY,EAAE;MAAEC,MAAM,EAAEF;IAAQ,CAAC,CAAC;IACtE,OAAOR,GAAG,CAACG,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;IACA,OAAO;MAAEO,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC;EAChC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}